{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCCA,IAqEQ,EAoCc,EACd,EACA,EAKA,EA8BA,EArEA,EACA,EACA,EACA,EACA,EACA,EA9EF,EAAQ,AADA,SAAS,aAAa,CAAC,SACjB,aAAa,CAAC,SAI5B,EAAW,SAAS,gBAAgB,CAAC,MACrC,EAAiB,SAAS,gBAAgB,CAAC,YAC3C,EAAQ,EAAG,EAAM,gBAAgB,CAAC,OAElC,EAAiB,MAAM,IAAI,CAAC,CAAE,OAAQ,EAAS,MAAM,AAAC,EAAG,WAAM,OAAA,E,GAE/D,EAAe,CACnB,iBAAkB,wBAClB,iBAAkB,sCAClB,gBAAiB,8BACjB,cAAe,gCACf,cAAe,4BACf,iBAAkB,+BAClB,WAAY,yBACd,EAEM,EAAkB,SAAC,CAAA,CAAS,CAAlC,EACE,EAAQ,gBAAgB,CAAC,QAAS,WAQlC,CAAc,CARqC,EAQ9B,EAAI,GAEzB,EAAK,IAAI,CAAC,SAAC,CAAA,CAAG,CAAd,EACE,IAAM,EAAU,EAAE,KAAK,CAX0B,EAWnB,CAAC,WAAW,CACpC,EAAU,EAAE,KAAK,CAZ0B,EAYnB,CAAC,WAAW,CAE1C,OACE,CAAc,CAfiC,EAe1B,CACrB,EAAQ,aAAa,CAAC,EAAS,KAAA,EAAW,CAAE,QAAS,CAAA,CAAK,EAE9D,GAEA,EAAM,SAAS,CAAG,GAClB,EAAK,OAAO,CAAC,SAAC,CAAd,EAAsB,OAAA,EAAM,MAAM,CAAC,E,E,EApBrC,EAEA,EAAS,OAAO,CAAC,GAEjB,EAAe,OAAO,CAAC,GAsBvB,EAAM,gBAAgB,CAAC,QAEvB,SAAqB,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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar table = document.querySelector(\"table\");\nvar tbody = table.querySelector(\"tbody\");\n// #region sorting\nvar headings = document.querySelectorAll(\"th\");\nvar footerHeadings = document.querySelectorAll(\"tfoot th\");\nvar rows = _to_consumable_array(tbody.querySelectorAll(\"tr\"));\nvar sortDirections = Array.from({\n    length: headings.length\n}, function() {\n    return -1;\n});\nvar NOTIFICATION = {\n    WarningEmptyCell: \"Cell can not be empty\",\n    WarningShortName: \"Name can not be less then 4 letters\",\n    WarningSmallAge: \"Age can not be less then 18\",\n    WarningBigAge: \"Age can not be bigger then 90\",\n    SuccessUpdate: \"User updated successfully\",\n    ErrorEmptyFields: \"All fields must be filled in\",\n    SuccessAdd: \"User added successfully\"\n};\nvar handlerCallback = function(heading, index) {\n    heading.addEventListener(\"click\", function() {\n        return sortColumn(index);\n    });\n};\nheadings.forEach(handlerCallback);\nfooterHeadings.forEach(handlerCallback);\nfunction sortColumn(index) {\n    sortDirections[index] *= -1;\n    rows.sort(function(a, b) {\n        var aParams = a.cells[index].textContent;\n        var bParams = b.cells[index].textContent;\n        return sortDirections[index] * aParams.localeCompare(bParams, undefined, {\n            numeric: true\n        });\n    });\n    tbody.innerHTML = \"\";\n    rows.forEach(function(row) {\n        return tbody.append(row);\n    });\n}\n// #endregion\n// #region active row\ntbody.addEventListener(\"click\", activateRow);\nfunction activateRow(e) {\n    var arrOfRows = _to_consumable_array(tbody.querySelectorAll(\"tr\"));\n    arrOfRows.forEach(function(row) {\n        row.className = \"\";\n    });\n    e.target.closest(\"tr\").className = \"active\";\n}\n// #endregion\n// #region create form\nvar newCustomerForm = createForm();\ndocument.body.appendChild(newCustomerForm);\nfunction createForm() {\n    var form = document.createElement(\"form\");\n    form.setAttribute(\"class\", \"new-employee-form\");\n    var labelName = createInput(\"name\");\n    var labelPosition = createInput(\"position\");\n    var labelAge = createInput(\"age\", \"number\");\n    var labelSalary = createInput(\"salary\", \"number\");\n    var select = createSelect(\"office\");\n    var button = createButton();\n    form.insertAdjacentElement(\"beforeend\", labelName);\n    form.insertAdjacentElement(\"beforeend\", labelPosition);\n    form.insertAdjacentElement(\"beforeend\", select);\n    form.insertAdjacentElement(\"beforeend\", labelAge);\n    form.insertAdjacentElement(\"beforeend\", labelSalary);\n    form.insertAdjacentElement(\"beforeend\", button);\n    return form;\n}\nfunction createInput(inputName) {\n    var type = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"text\";\n    var label = document.createElement(\"label\");\n    var input = document.createElement(\"input\");\n    var labelName = inputName[0].toUpperCase() + inputName.slice(1);\n    input.name = inputName;\n    input.type = type;\n    input.dataset.qa = inputName;\n    label.insertAdjacentText(\"afterbegin\", \"\".concat(labelName));\n    label.insertAdjacentElement(\"beforeend\", input);\n    return label;\n}\nfunction createSelect(nameSelect) {\n    var labelSelect = document.createElement(\"label\");\n    var select = document.createElement(\"select\");\n    select.name = nameSelect;\n    select.dataset.qa = \"office\";\n    var labelText = nameSelect[0].toUpperCase() + nameSelect.slice(1);\n    labelSelect.insertAdjacentText(\"afterbegin\", labelText);\n    var options = [\n        \"Tokyo\",\n        \"Singapore\",\n        \"London\",\n        \"New York\",\n        \"Edinburgh\",\n        \"San Francisco\"\n    ].map(function(city) {\n        var option = document.createElement(\"option\");\n        option.value = city;\n        option.insertAdjacentText(\"beforeend\", city);\n        return option;\n    });\n    options.forEach(function(option) {\n        select.insertAdjacentElement(\"beforeend\", option);\n    });\n    labelSelect.insertAdjacentElement(\"beforeend\", select);\n    return labelSelect;\n}\nfunction createButton() {\n    var button = document.createElement(\"button\");\n    button.setAttribute(\"id\", \"button\");\n    button.type = \"submit\";\n    button.insertAdjacentText(\"beforeend\", \"Save to table\");\n    return button;\n}\n// #endregion\n// #region submit functionality\nnewCustomerForm.addEventListener(\"submit\", createNewEmploee);\nfunction createNewEmploee(e) {\n    e.preventDefault();\n    var newRow = document.createElement(\"tr\");\n    var chekoutText = valuesValidation(newCustomerForm);\n    showMessage(chekoutText);\n    if (chekoutText.type === \"error\") return;\n    var salary = +e.target[\"salary\"].value;\n    var values = [\n        e.target[\"name\"].value,\n        e.target[\"position\"].value,\n        e.target[\"office\"].value,\n        e.target[\"age\"].value,\n        \"$\".concat(salary.toLocaleString(\"en-EN\"))\n    ];\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = values[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var value = _step.value;\n            var cell = document.createElement(\"td\");\n            cell.insertAdjacentText(\"beforeend\", value);\n            newRow.insertAdjacentElement(\"beforeend\", cell);\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    tbody.insertAdjacentElement(\"beforeend\", newRow);\n    rows.push(newRow);\n    newCustomerForm.reset();\n}\nfunction showMessage(message) {\n    var newNotificationBlock = document.createElement(\"div\");\n    var oldNotificationBlock = document.querySelector(\".notification\");\n    if (oldNotificationBlock) oldNotificationBlock.remove();\n    var title = document.createElement(\"h1\");\n    var text = document.createElement(\"p\");\n    if (!newNotificationBlock.className) {\n        newNotificationBlock.className = \"notification\";\n        newNotificationBlock.dataset.qa = \"notification\";\n    }\n    switch(message.type){\n        case \"error\":\n            title.innerText = \"ERROR\";\n            newNotificationBlock.classList.add(\"error\");\n            break;\n        case \"warning\":\n            title.innerText = \"ERROR\";\n            newNotificationBlock.classList.add(\"error\");\n            break;\n        default:\n            title.innerText = \"SUCCESS\";\n            newNotificationBlock.classList.add(\"success\");\n            break;\n    }\n    text.innerText = message.text;\n    newNotificationBlock.insertAdjacentElement(\"afterbegin\", title);\n    newNotificationBlock.insertAdjacentElement(\"beforeend\", text);\n    document.body.append(newNotificationBlock);\n    window.setTimeout(function() {\n        newNotificationBlock.remove();\n    }, 5000);\n}\nfunction valuesValidation(inputToCheck) {\n    var nameValue = inputToCheck[\"name\"].value;\n    var age = +inputToCheck[\"age\"].value;\n    var position = inputToCheck[\"position\"].value;\n    var office = inputToCheck[\"office\"].value;\n    var salary = inputToCheck[\"salary\"].value;\n    if (position === \"\" || office === \"\" || salary === \"\") return {\n        type: \"error\",\n        text: NOTIFICATION.ErrorEmptyFields\n    };\n    if (nameValue.length < 4) return {\n        type: \"error\",\n        text: NOTIFICATION.WarningShortName\n    };\n    if (age < 18) return {\n        type: \"error\",\n        text: NOTIFICATION.WarningSmallAge\n    };\n    if (age > 90) return {\n        type: \"error\",\n        text: NOTIFICATION.WarningBigAge\n    };\n    return {\n        type: \"success\",\n        text: NOTIFICATION.SuccessAdd\n    };\n}\n// #endregion\n// #region editing table\ntbody.addEventListener(\"dblclick\", editCell);\nfunction editCell(e) {\n    // TODO improve editing and validation\n    var targetCell = e.target.closest(\"td\");\n    if (!targetCell) return;\n    var value = targetCell.innerText;\n    var cellInput = document.createElement(\"input\");\n    cellInput.className = \"cell-input\";\n    cellInput.autofocus = true;\n    cellInput.dataset.oldValue = value;\n    cellInput.value = value;\n    if (!isNaN(value)) {\n        cellInput.type = \"number\";\n        cellInput.min = 18;\n        cellInput.max = 90;\n    }\n    if (!targetCell.nextElementSibling) {\n        cellInput.type = \"number\";\n        cellInput.value = parseFloat(value.slice(1).replace(/,/g, \"\"));\n    }\n    targetCell.innerText = \"\";\n    targetCell.insertAdjacentElement(\"beforeend\", cellInput);\n    cellInput.addEventListener(\"blur\", handlerBlur);\n    cellInput.addEventListener(\"keypress\", handlerKeypress);\n}\nfunction handlerBlur(e) {\n    var input = e.target;\n    var message = cellValid(input);\n    showMessage(message);\n    if (message.type === \"error\" || message.type === \"warning\") {\n        input.focus();\n        return;\n    }\n    saveCellValue(input);\n}\nfunction handlerKeypress(e) {\n    var key = e.key;\n    if (key !== \"Enter\") return;\n    var input = e.target;\n    var message = cellValid(input);\n    showMessage(message);\n    if (message.type === \"error\" || message.type === \"warning\") return;\n    saveCellValue(input);\n}\nfunction saveCellValue(input) {\n    var newValue = input.value;\n    var targetCell = input.closest(\"td\");\n    if (!targetCell.nextElementSibling) newValue = \"$\".concat(parseFloat(newValue).toLocaleString(\"en-EN\"));\n    targetCell.innerText = newValue;\n    input.remove();\n}\nfunction cellValid(input) {\n    var row = input.closest(\"tr\");\n    var arrOfCell = _to_consumable_array(row.querySelectorAll(\"td\"));\n    var currentIndex = arrOfCell.findIndex(function(cell) {\n        return cell.firstChild === input;\n    });\n    var value = input.value;\n    if (value.length === 0 || value.trim() === \"\") return {\n        type: \"warning\",\n        text: NOTIFICATION.WarningEmptyCell\n    };\n    if (currentIndex === 0 && value.length < 4 || value.trim() === \"\") return {\n        type: \"warning\",\n        text: NOTIFICATION.WarningShortName\n    };\n    if (currentIndex === 3 && +value < 18 || value.trim() === \"\") return {\n        type: \"warning\",\n        text: NOTIFICATION.WarningSmallAge\n    };\n    if (currentIndex === 3 && +value > 90 || value.trim() === \"\") return {\n        type: \"warning\",\n        text: NOTIFICATION.WarningBigAge\n    };\n    return {\n        type: \"success\",\n        text: NOTIFICATION.SuccessUpdate\n    };\n}\n\n//# sourceMappingURL=index.eb39d383.js.map\n","const table = document.querySelector('table');\nconst tbody = table.querySelector('tbody');\n\n// #region sorting\n\nconst headings = document.querySelectorAll('th');\nconst footerHeadings = document.querySelectorAll('tfoot th');\nconst rows = [...tbody.querySelectorAll('tr')];\n\nconst sortDirections = Array.from({ length: headings.length }, () => -1);\n\nconst NOTIFICATION = {\n  WarningEmptyCell: 'Cell can not be empty',\n  WarningShortName: 'Name can not be less then 4 letters',\n  WarningSmallAge: 'Age can not be less then 18',\n  WarningBigAge: 'Age can not be bigger then 90',\n  SuccessUpdate: 'User updated successfully',\n  ErrorEmptyFields: 'All fields must be filled in',\n  SuccessAdd: 'User added successfully',\n};\n\nconst handlerCallback = (heading, index) => {\n  heading.addEventListener('click', () => sortColumn(index));\n};\n\nheadings.forEach(handlerCallback);\n\nfooterHeadings.forEach(handlerCallback);\n\nfunction sortColumn(index) {\n  sortDirections[index] *= -1;\n\n  rows.sort((a, b) => {\n    const aParams = a.cells[index].textContent;\n    const bParams = b.cells[index].textContent;\n\n    return (\n      sortDirections[index] *\n      aParams.localeCompare(bParams, undefined, { numeric: true })\n    );\n  });\n\n  tbody.innerHTML = '';\n  rows.forEach((row) => tbody.append(row));\n}\n\n// #endregion\n\n// #region active row\ntbody.addEventListener('click', activateRow);\n\nfunction activateRow(e) {\n  const arrOfRows = [...tbody.querySelectorAll('tr')];\n\n  arrOfRows.forEach((row) => {\n    row.className = '';\n  });\n\n  e.target.closest('tr').className = 'active';\n}\n\n// #endregion\n\n// #region create form\n\nconst newCustomerForm = createForm();\n\ndocument.body.appendChild(newCustomerForm);\n\nfunction createForm() {\n  const form = document.createElement('form');\n\n  form.setAttribute('class', 'new-employee-form');\n\n  const labelName = createInput('name');\n  const labelPosition = createInput('position');\n  const labelAge = createInput('age', 'number');\n  const labelSalary = createInput('salary', 'number');\n  const select = createSelect('office');\n  const button = createButton();\n\n  form.insertAdjacentElement('beforeend', labelName);\n  form.insertAdjacentElement('beforeend', labelPosition);\n  form.insertAdjacentElement('beforeend', select);\n  form.insertAdjacentElement('beforeend', labelAge);\n  form.insertAdjacentElement('beforeend', labelSalary);\n  form.insertAdjacentElement('beforeend', button);\n\n  return form;\n}\n\nfunction createInput(inputName, type = 'text') {\n  const label = document.createElement('label');\n  const input = document.createElement('input');\n  const labelName = inputName[0].toUpperCase() + inputName.slice(1);\n\n  input.name = inputName;\n  input.type = type;\n  input.dataset.qa = inputName;\n\n  label.insertAdjacentText('afterbegin', `${labelName}`);\n  label.insertAdjacentElement('beforeend', input);\n\n  return label;\n}\n\nfunction createSelect(nameSelect) {\n  const labelSelect = document.createElement('label');\n  const select = document.createElement('select');\n\n  select.name = nameSelect;\n  select.dataset.qa = 'office';\n\n  const labelText = nameSelect[0].toUpperCase() + nameSelect.slice(1);\n\n  labelSelect.insertAdjacentText('afterbegin', labelText);\n\n  const options = [\n    `Tokyo`,\n    `Singapore`,\n    `London`,\n    `New York`,\n    `Edinburgh`,\n    `San Francisco`,\n  ].map((city) => {\n    const option = document.createElement('option');\n\n    option.value = city;\n    option.insertAdjacentText('beforeend', city);\n\n    return option;\n  });\n\n  options.forEach((option) => {\n    select.insertAdjacentElement('beforeend', option);\n  });\n\n  labelSelect.insertAdjacentElement('beforeend', select);\n\n  return labelSelect;\n}\n\nfunction createButton() {\n  const button = document.createElement('button');\n\n  button.setAttribute('id', 'button');\n  button.type = 'submit';\n\n  button.insertAdjacentText('beforeend', 'Save to table');\n\n  return button;\n}\n\n// #endregion\n\n// #region submit functionality\n\nnewCustomerForm.addEventListener('submit', createNewEmploee);\n\nfunction createNewEmploee(e) {\n  e.preventDefault();\n\n  const newRow = document.createElement('tr');\n\n  const chekoutText = valuesValidation(newCustomerForm);\n\n  showMessage(chekoutText);\n\n  if (chekoutText.type === 'error') {\n    return;\n  }\n\n  const salary = +e.target['salary'].value;\n\n  const values = [\n    e.target['name'].value,\n    e.target['position'].value,\n    e.target['office'].value,\n    e.target['age'].value,\n    `$${salary.toLocaleString('en-EN')}`,\n  ];\n\n  for (const value of values) {\n    const cell = document.createElement('td');\n\n    cell.insertAdjacentText('beforeend', value);\n\n    newRow.insertAdjacentElement('beforeend', cell);\n  }\n\n  tbody.insertAdjacentElement('beforeend', newRow);\n\n  rows.push(newRow);\n\n  newCustomerForm.reset();\n}\n\nfunction showMessage(message) {\n  const newNotificationBlock = document.createElement('div');\n  const oldNotificationBlock = document.querySelector('.notification');\n\n  if (oldNotificationBlock) {\n    oldNotificationBlock.remove();\n  }\n\n  const title = document.createElement('h1');\n  const text = document.createElement('p');\n\n  if (!newNotificationBlock.className) {\n    newNotificationBlock.className = 'notification';\n    newNotificationBlock.dataset.qa = 'notification';\n  }\n\n  switch (message.type) {\n    case 'error':\n      title.innerText = 'ERROR';\n      newNotificationBlock.classList.add('error');\n      break;\n\n    case 'warning':\n      title.innerText = 'ERROR';\n      newNotificationBlock.classList.add('error');\n      break;\n\n    default:\n      title.innerText = 'SUCCESS';\n      newNotificationBlock.classList.add('success');\n      break;\n  }\n\n  text.innerText = message.text;\n\n  newNotificationBlock.insertAdjacentElement('afterbegin', title);\n  newNotificationBlock.insertAdjacentElement('beforeend', text);\n\n  document.body.append(newNotificationBlock);\n\n  window.setTimeout(() => {\n    newNotificationBlock.remove();\n  }, 5000);\n}\n\nfunction valuesValidation(inputToCheck) {\n  const nameValue = inputToCheck['name'].value;\n  const age = +inputToCheck['age'].value;\n  const position = inputToCheck['position'].value;\n  const office = inputToCheck['office'].value;\n  const salary = inputToCheck['salary'].value;\n\n  if (position === '' || office === '' || salary === '') {\n    return { type: 'error', text: NOTIFICATION.ErrorEmptyFields };\n  }\n\n  if (nameValue.length < 4) {\n    return { type: 'error', text: NOTIFICATION.WarningShortName };\n  }\n\n  if (age < 18) {\n    return { type: 'error', text: NOTIFICATION.WarningSmallAge };\n  }\n\n  if (age > 90) {\n    return { type: 'error', text: NOTIFICATION.WarningBigAge };\n  }\n\n  return { type: 'success', text: NOTIFICATION.SuccessAdd };\n}\n\n// #endregion\n\n// #region editing table\n\ntbody.addEventListener('dblclick', editCell);\n\nfunction editCell(e) {\n  // TODO improve editing and validation\n  const targetCell = e.target.closest('td');\n\n  if (!targetCell) {\n    return;\n  }\n\n  const value = targetCell.innerText;\n\n  const cellInput = document.createElement('input');\n\n  cellInput.className = 'cell-input';\n  cellInput.autofocus = true;\n  cellInput.dataset.oldValue = value;\n  cellInput.value = value;\n\n  if (!isNaN(value)) {\n    cellInput.type = 'number';\n    cellInput.min = 18;\n    cellInput.max = 90;\n  }\n\n  if (!targetCell.nextElementSibling) {\n    cellInput.type = 'number';\n    cellInput.value = parseFloat(value.slice(1).replace(/,/g, ''));\n  }\n\n  targetCell.innerText = '';\n  targetCell.insertAdjacentElement('beforeend', cellInput);\n\n  cellInput.addEventListener('blur', handlerBlur);\n  cellInput.addEventListener('keypress', handlerKeypress);\n}\n\nfunction handlerBlur(e) {\n  const input = e.target;\n\n  const message = cellValid(input);\n\n  showMessage(message);\n\n  if (message.type === 'error' || message.type === 'warning') {\n    input.focus();\n\n    return;\n  }\n\n  saveCellValue(input);\n}\n\nfunction handlerKeypress(e) {\n  const key = e.key;\n\n  if (key !== 'Enter') {\n    return;\n  }\n\n  const input = e.target;\n\n  const message = cellValid(input);\n\n  showMessage(message);\n\n  if (message.type === 'error' || message.type === 'warning') {\n    return;\n  }\n\n  saveCellValue(input);\n}\n\nfunction saveCellValue(input) {\n  let newValue = input.value;\n  const targetCell = input.closest('td');\n\n  if (!targetCell.nextElementSibling) {\n    newValue = `$${parseFloat(newValue).toLocaleString('en-EN')}`;\n  }\n\n  targetCell.innerText = newValue;\n  input.remove();\n}\n\nfunction cellValid(input) {\n  const row = input.closest('tr');\n  const arrOfCell = [...row.querySelectorAll('td')];\n  const currentIndex = arrOfCell.findIndex((cell) => {\n    return cell.firstChild === input;\n  });\n\n  const value = input.value;\n\n  if (value.length === 0 || value.trim() === '') {\n    return {\n      type: 'warning',\n      text: NOTIFICATION.WarningEmptyCell,\n    };\n  }\n\n  if ((currentIndex === 0 && value.length < 4) || value.trim() === '') {\n    return {\n      type: 'warning',\n      text: NOTIFICATION.WarningShortName,\n    };\n  }\n\n  if ((currentIndex === 3 && +value < 18) || value.trim() === '') {\n    return { type: 'warning', text: NOTIFICATION.WarningSmallAge };\n  }\n\n  if ((currentIndex === 3 && +value > 90) || value.trim() === '') {\n    return { type: 'warning', text: NOTIFICATION.WarningBigAge };\n  }\n\n  return { type: 'success', text: NOTIFICATION.SuccessUpdate };\n}\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","form","nameSelect","labelSelect","select","labelText","button","labelName","labelPosition","labelAge","labelSalary","tbody","table","document","querySelector","headings","querySelectorAll","footerHeadings","rows","sortDirections","NOTIFICATION","WarningEmptyCell","WarningShortName","WarningSmallAge","WarningBigAge","SuccessUpdate","ErrorEmptyFields","SuccessAdd","handlerCallback","heading","index","addEventListener","sort","a","b","aParams","cells","textContent","bParams","localeCompare","undefined","numeric","innerHTML","forEach","row","append","e","arrOfRows","className","target","closest","newCustomerForm","createElement","setAttribute","createInput","dataset","qa","toUpperCase","insertAdjacentText","options","map","city","option","value","insertAdjacentElement","type","inputName","arguments","label","input","concat","showMessage","message","newNotificationBlock","oldNotificationBlock","remove","title","text","innerText","classList","add","body","window","setTimeout","handlerBlur","cellValid","focus","saveCellValue","handlerKeypress","key","newValue","targetCell","nextElementSibling","parseFloat","toLocaleString","currentIndex","arrOfCell","findIndex","cell","firstChild","trim","appendChild","preventDefault","newRow","chekoutText","nameValue","inputToCheck","age","position","office","salary","values","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","next","done","err","return","push","reset","cellInput","autofocus","oldValue","isNaN","min","max","replace"],"version":3,"file":"index.eb39d383.js.map"}